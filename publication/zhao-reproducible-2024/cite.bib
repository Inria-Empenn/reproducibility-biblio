@article{zhao_reproducible_2024,
 abstract = {Abstract
Neuroimaging research faces a crisis of reproducibility. With massive sample sizes and greater data complexity, this problem becomes more acute. Software that operates on imaging data defined using the Brain Imaging Data Structure (BIDS)—the BIDS App—has provided a substantial advance. However, even using BIDS Apps, a full audit trail of data processing is a necessary prerequisite for fully reproducible research. Obtaining a faithful record of the audit trail is challenging—especially for large datasets. Recently, the FAIRly big framework was introduced as a way to facilitate reproducible processing of large-scale data by leveraging DataLad—a version control system for data management. However, the current implementation of this framework was more of a proof of concept, and could not be immediately reused by other investigators for different use cases. Here, we introduce the BIDS App Bootstrap (BABS), a user-friendly and generalizable Python package for reproducible image processing at scale. BABS facilitates the reproducible application of BIDS Apps to large-scale datasets. Leveraging DataLad and the FAIRly big framework, BABS tracks the full audit trail of data processing in a scalable way by automatically preparing all scripts necessary for data processing and version tracking on high performance computing (HPC) systems. Currently, BABS supports jobs submissions and audits on Sun Grid Engine (SGE) and Slurm HPCs with a parsimonious set of programs. To demonstrate its scalability, we applied BABS to data from the Healthy Brain Network (HBN; n = 2,565). Taken together, BABS allows reproducible and scalable image processing and is broadly extensible via an open-source development model.},
 annote = {“DaLad tracks the “checksum” of the file content, a short, fixed-length hexadecimal number (e.g., 32 digits for MD5 checksum) representing the file content.” (Zhao et al., 2024, p. 3) Checksum is sufficient to represent even a large and complex file (is there a limit to the file size) and can detect even byte change. Git-annex tracks the checksum that represents the file as it is cheaper in resource than to track the file/},
 author = {Zhao, Chenying and Jarecka, Dorota and Covitz, Sydney and Chen, Yibei and Eickhoff, Simon B. and Fair, Damien A. and Franco, Alexandre R. and Halchenko, Yaroslav O. and Hendrickson, Timothy J. and Hoffstaedter, Felix and Houghton, Audrey and Kiar, Gregory and Macdonald, Austin and Mehta, Kahini and Milham, Michael P. and Salo, Taylor and Hanke, Michael and Ghosh, Satrajit S. and Cieslak, Matthew and Satterthwaite, Theodore D.},
 doi = {10.1162/imag_a_00074},
 file = {Zhao et al. - 2024 - A reproducible and generalizable software workflow.pdf:/home/alpron/Zotero/storage/SLA62NAB/Zhao et al. - 2024 - A reproducible and generalizable software workflow.pdf:application/pdf},
 issn = {2837-6056},
 journal = {Imaging Neuroscience},
 keywords = {Important},
 language = {en},
 month = {January},
 pages = {1--19},
 title = {A reproducible and generalizable software workflow for analysis of large-scale neuroimaging data collections using BIDS Apps},
 url = {https://direct.mit.edu/imag/article/doi/10.1162/imag_a_00074/119046/A-reproducible-and-generalizable-software-workflow},
 urldate = {2024-02-09},
 volume = {2},
 year = {2024}
}
